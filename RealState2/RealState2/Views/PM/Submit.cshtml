@model RealState2.Models.Project
@{
    Layout = "~/Views/Shared/_layout_pm.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="col-md-10">
            @Html.HiddenFor(model => model.CustomerName)
        </div>
        <div class="form-group">
          PM Name
            <div class="col-md-10">
                @Html.EditorFor(model => model.PMName, new { htmlAttributes = new { @Value = @Session["UserName"].ToString(), @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PMName, "", new { @class = "text-danger" })
            </div>
        </div>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.TLName)
            </div>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.JEName)
            </div>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Name)
            </div>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Description)
            </div>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Price)
            </div>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Date)
            </div>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Comment)

                <div class="checkbox">
                    @Html.HiddenFor(model => model.Approval)
                </div>

                
                <div class="checkbox">
                    @Html.HiddenFor(model => model.PMAccept)
                </div>
                <div class="checkbox">
                    @Html.HiddenFor(model => model.TLAccept)
                </div>
                <div class="checkbox">
                    @Html.HiddenFor(model => model.Assign)
                </div>
                <div class="checkbox">
                    @Html.HiddenFor(model => model.JEAccept)
                </div>
                <div class="checkbox">
                    @Html.HiddenFor(model => model.Delivered)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Submit, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Submit)
                            @Html.ValidationMessageFor(model => model.Submit, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Report, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Report)
                            @Html.ValidationMessageFor(model => model.Report, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-10">


                    @Html.HiddenFor(model => model.Feedback)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
}
